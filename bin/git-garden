#!/usr/bin/perl

=head1 SYNOPSIS

    perl bin/git-garden --help

    perl bin/git-garden --git_dir t/repos/test -t gnuplot
    firefox simple.png

    perl bin/git-garden --git_dir t/repos/test
    firefox simple.html

=cut

use strict;
use warnings;
use 5.010;

use lib ( 'lib', '../lib' );
use Getopt::Long::Descriptive;

use Git::Garden 'create_git_graph_grid';
use Git::Garden::Importer 'prepare_commits';
use Git::Garden::Render::HTML 'htmlplot_grid';
use Git::Garden::Render::GnuPlot 'gnuplot_grid';
use Git::Garden::Render::GraphViz 'graphvizplot_grid';

$|++;

main();

sub main {
    my ( $opt, $usage ) = describe_options(
        'git-garden %o',    #
        [],
        [ 'git_dir|d=s', "path to the git repository you want to graph, can be either to the checkout, the .git dir, or even any renamed git metadata dir. Default: .", { default => '.' } ],
        [ 'dump_type|t=s', "Format in which to dump the generated data. ( html, gnuplot, graphviz ) Default: html", { default => 'html' } ],
        [],
        [ 'help|h', "print usage message and exit" ],
    );
    print( $usage->text ), exit if $opt->help;

    my $commits = prepare_commits( $opt->git_dir );

    my $grid = create_git_graph_grid( $commits );

    htmlplot_grid( $grid, "simple" ) if $opt->dump_type eq 'html';
    gnuplot_grid( $grid, "simple" ) if $opt->dump_type eq 'gnuplot';
    graphvizplot_grid( $grid, "simple" ) if $opt->dump_type eq 'graphviz';

    return;
}
